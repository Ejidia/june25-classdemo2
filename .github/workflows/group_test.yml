name: Django CI/CD Pipeline

on: [push, pull_request]

jobs:
  test:
    name: ðŸ§ª Run  Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Tests
        run: |
          python manage.py test

  lint:
  name: Lint Code with pylint
  runs-on: ubuntu-latest
  needs: test
  steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Set Up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
    - name: Run pylint
      run: |
        pylint .github/workflows/group_test.yml
        pylint manage.py
  coverage:
    name:  Run Coverage Report
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Coverage Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Run Coverage
        run: |
          coverage run manage.py test
          coverage report
          coverage html  # Optional: generates a web report
          # coverage xml can be used with codecov or coveralls

  security:
    name:  Run Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: Run Bandit Security Scan
        run: |
          bandit -r . -ll

  deploy:
    name:  Deploy Application
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Simulate Deployment
        run: |
          echo " All checks passed. Deploying Django app..."
        
